h1. DOMBuilder

* BSD Licensed - "http://creativecommons.org/licenses/BSD/":http://creativecommons.org/licenses/BSD/
* Tested in Firefox 3/3.5, Safari 3/4, IE 6/7/8

h1. Usage

h3. Here's the HTML we want to generate:

<pre><div class="location_select_control">
    <a href="" class="location_select_label">
        <label>This is my label</label>
        <label>This is another label</label>
    </a>
</div></pre>

h3. Here is how we'd do it with the standard DOM:

<pre>control_div = document.createElement('div');
control_div.className = "location_select_control";

control_link = document.createElement('a');
control_link.href = "";
control_link.className = "location_select_label";

control_label = document.createElement('label');
control_label.innerHTML = "This is my label";

control_label2 = document.createElement('label');
control_label2.innerHTML = "This is another label";

control_link.appendChild(control_label);
control_link.appendChild(control_label2);
control_div.appendChild(control_link);

document.body.appendChild(control_div);</pre>

h3. Lastly, here's how we'd do it with DOMBuilder:

<pre>// Define a shortcut. Let's pick underscore. It can be anything, really. Or nothing. Whatever.
var _ = DOMBuilder;

document.body.appendChild(
    _('div', { 'class':'location_select_control' }).child(
        _('a', { 'href':'', 'class':'location_select_label' }).child([
            _('label').html('This is my label'),
            _('label').html('This is another label')
        ])
    ).asDOM()
);</pre>

See <code>index.htm</code> for more complex examples, or see it in action at <a href="http://ryanparman.com/labs/dombuilder/">http://ryanparman.com/labs/dombuilder/</a>.

h1. API

I wanted to make DOMBuilder as chainable as possible. All methods return <code>this</code> except for the <code>asDOM()</code> and <code>asHTML()</code> methods.


h2. DOMBuilder(elem, attr) - _Constructor_

DOMBuilder generates DOM nodes with an object-oriented syntax.

h3. Parameters

* <code>elem</code> - {String} (Required) The name of the element to generate.
* <code>attr</code> - {Hash} (Optional) A JSON Hash of the attributes to apply to the element.

h3. Returns

* <code>DOMBuilder</code> - The original DOMBuilder object.


h2. child(obj) - _Method_

Append one or more child nodes.

h3. Parameters

* <code>obj</code> - {HTMLElement | DOMBuilder | Array} (Required) A DOM element, a DOMBuilder object, or an array of these for multiple children.

h3. Returns

* <code>DOMBuilder</code> - The original DOMBuilder object.


h2. html(text, replace) - _Method_

Set a value via innerHTML.

h3. Parameters

* <code>text</code> - {String} (Required) The string to assign via innerHTML.
* <code>replace</code> - {Boolean} (Optional) Whether this new value should replace the existing value. Defaults to append (false).

h3. Returns

* <code>DOMBuilder</code> - The original DOMBuilder object.


h2. asDOM() - _Method_

Return the DOM element for DOMBuilder that can be used with standard DOM methods. This is optional when passed into a DOMBuilder.child() method. This is required as the last method in the chain when passing to a native DOM method.

h3. Returns

* <code>HTMLElement</code> - The entire DOMBuilder object as a DOM node.


h2. asHTML() - _Method_

Return the DOMBuilder object as an HTML string.

h3. Returns

* <code>String</code> - The entire DOMBuilder object as a string of HTML.
