<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"
	"http://www.w3.org/TR/html4/strict.dtd">
<html>
	<head>
		<meta http-equiv="Content-type" content="text/html; charset=utf-8">
		<title>convert</title>
		<style type="text/css" media="screen">
		textarea {
			width: 100%;
			height: 250px;
		}
		</style>
	</head>
	<body>

		<h3>Enter your HTML</h3>
		<textarea name="input"><p>This is a <a href="">sample of the code</a> that you may like.</p>
<p>And another <a href="#"><strong>complex-ish</strong></a> one.</p>

<ul>
    <li><a href="http://google.com">One</a></li>
    <li><em>Two</em></li>
    <li><strong>Three</strong></li>
</ul>

<table width="20%" border="1">
    <thead>
        <tr>
            <th>col-1</th>
            <th>col-2</th>
            <th>col-3</th>
            <th>col-4</th>
            <th>col-5</th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <td>cell-1</td>
            <td>cell-2</td>
            <td>cell-3</td>
            <td>cell-4</td>
            <td>cell-5</td>
        </tr>
        <tr>
            <td>cell-6</td>
            <td>cell-7</td>
            <td>cell-8</td>
            <td>cell-9</td>
            <td>cell-10</td>
        </tr>
        <tr>
            <td>cell-11</td>
            <td>cell-12</td>
        </tr>
    </tbody>
</table></textarea>

		<ul>
			<li>Alias <code>DOMBuilder</code> to <input type="text" id="alias" value="_" size="10"></li>
			<li>Indent code with <select id="indent">
				<option value="2">2 spaces</option>
				<option value="4" selected="selected">4 spaces</option>
				<option value="tab">a tab</option>
			</select></li>
		</ul>
		<p><input type="button" value="Convert HTML to DOMBuilder code" id="inputSubmit"></p>

		<hr>

		<h3>Output DOMBuilder code</h3>
		<textarea name="output" readonly="readonly"></textarea>
		<p><input type="button" value="Add these DOMBuilder nodes to the live DOM tree" id="renderDOM"></p>

		<hr>

		<h3>Rendered DOMBuilder nodes</h3>
		<div id="hook"></div>

		<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js" type="text/javascript" charset="utf-8"></script>
		<script src="dombuilder.min.js" type="text/javascript" charset="utf-8"></script>

		<script type="text/javascript" charset="utf-8">
		$(function() {

			$('input#inputSubmit').click(function(evt) {
				var input = $('textarea:first').val().replace(/>\s+</gm, '><');
				var alias = $('#alias').val();
				var db = convertToDOMBuilder(input, alias);
				$('textarea:last').val(db);
			});

			$('input#renderDOM').click(function(evt) {
				var alias = $('#alias').val();
				if (alias.toLowerCase() !== 'dombuilder') {
					eval('var ' + alias + ' = DOMBuilder;');
				}

				var db = $('textarea:last').val();
				db = eval(db);
				$('#hook').get(0).innerHTML = '';
				$('#hook').get(0).appendChild(db);
			});

			window.convertToDOMBuilder = function(html, alias) {
				var text = [],
					output,
					container = (function(html) {
						var d = document.createElement('div');
						d.innerHTML = html;
						return d;
					})(html),
					nodes = container.childNodes,
					indent = 1;

				for (var i = 0, max = nodes.length; i < max; i++) {

					var tagName = nodes[i].nodeName.toLowerCase();

					if (tagName === '#text') {
						text.push("document.createTextNode('" + nodes[i].data + "')");
					}
					else {
						if (nodes[i].attributes.length) {
							var attr = [];
							for (var j = 0, jmax = nodes[i].attributes.length; j < jmax; j++) {
								attr.push("'" + nodes[i].attributes[j].nodeName + "':'" + nodes[i].attributes[j].nodeValue + "'");
							}
							text.push(alias + "('" + tagName + "', { " + attr.join(', ') + " })" + parseChildren(nodes[i].childNodes, indent + 1, alias));
						}
						else {
							text.push(alias + "('" + tagName + "')" + parseChildren(nodes[i].childNodes, indent + 1, alias));
						}
					}
				}

				return alias + ".DOM([\n" + ind(indent) + text.join(",\n" + ind(indent)) + "\n])"
			};

			var ind = function(max) {
				var indent = $('#indent').val(), ind;

				switch (indent) {
					case '2':
						ind = "  ";
						break;
					case '4':
						ind = "    ";
						break;
					case 'tab':
						ind = "\t";
						break;
				}

				var t = "";
				for (var i = 0; i < max; i++) {
					t += ind;
				}
				return t;
			};

			var parseChildren = function(nodes, indent, alias) {
				var text = [], ends = ['', ''];

				if (nodes[0].nodeName.toLowerCase() === '#text') {
					text.push(".html('" + nodes[0].parentNode.innerHTML + "')");
				}
				else {
					for (var i = 0, max = nodes.length; i < max; i++) {

						var tagName = nodes[i].nodeName.toLowerCase();

						if (tagName === '#text') {
							text.push(".html('" + nodes[i].data + "')");
						}
						else {
							if (nodes.length === 1) {
								ends[0] = '.child(\n' + ind(indent);
							}
							else if (nodes.length > 1) {
								ends[0] = '.child([\n' + ind(indent);
							}

							indent++;

							if (nodes[i].attributes.length) {
								var attr = [];
								for (var j = 0, jmax = nodes[i].attributes.length; j < jmax; j++) {
									attr.push("'" + nodes[i].attributes[j].nodeName + "':'" + nodes[i].attributes[j].nodeValue + "'");
								}
								text.push(alias + "('" + tagName + "', { " + attr.join(', ') + " })" + parseChildren(nodes[i].childNodes, indent, alias));
							}
							else {
								text.push(alias + "('" + tagName + "')" + parseChildren(nodes[i].childNodes, indent, alias));
							}

							indent--;

							if (nodes.length === 1) {
								ends[1] = "\n" + ind(indent - 1) + ')';
							}
							else if (nodes.length > 1) {
								ends[1] = "\n" + ind(indent - 1) + '])';
							}
						}
					}
				}

				return ends[0] + text.join(",\n" + ind(indent)) + ends[1];
			};
		});
		</script>
	</body>
</html>